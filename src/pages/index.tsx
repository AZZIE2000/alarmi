import Head from "next/head";
import Link from "next/link";
import { useEffect, useState } from "react";
import { set } from "zod";

import { AiOutlinePlus, AiOutlineMinus } from "react-icons/ai";

export default function Home() {
  const [time, setTime] = useState({ h: 0, m: 0, s: 0 });
  const [alarm, setAlarm] = useState({ h: 0, m: 0 });
  const [isOn, setIsOn] = useState(false);
  const [audio, setAudio] = useState<HTMLAudioElement | null>(null);
  const [check, setCheck] = useState(false);
  const [running, setRunning] = useState(false);
  useEffect(() => {
    setAudio(new Audio("/1.mp3"));
  }, []);
  const currentTime = () => {
    const currTime = new Date();
    setTime({
      h: currTime.getHours(),
      m: currTime.getMinutes(),
      s: currTime.getSeconds(),
    });
  };
  setInterval(currentTime, 1000);

  const startAlarm = () => {
    if (running) return;
    if (isOn && audio && time.h == alarm.h && time.m == alarm.m) {
      audio.loop = true;
      audio.volume = 1;
      audio.play().catch((err) => console.log(err));
      setRunning(true);
    }
  };
  setInterval(() => {
    setCheck(!check);
  }, 1000);
  useEffect(() => {
    startAlarm();
  }, [check]);
  return (
    <>
      <Head>
        <title>Alarmi</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center gap-5 bg-gradient-to-b from-[#2e026d] to-[#15162c] p-10">
        {/* ----- SA3A ----- */}
        <div>
          <div className="grid auto-cols-max grid-flow-col gap-5 text-center">
            <div className="rounded-box flex flex-col bg-white/10 p-2 text-neutral-content backdrop-blur-lg">
              <span className="countdown font-mono text-5xl">
                <span style={{ "--value": time.h }}></span>
              </span>
              hours
            </div>
            <div className="rounded-box flex flex-col bg-white/10 p-2 text-neutral-content backdrop-blur-lg">
              <span className="countdown font-mono text-5xl">
                <span style={{ "--value": time.m }}></span>
              </span>
              min
            </div>
            <div className="rounded-box flex flex-col bg-white/10 p-2 text-neutral-content backdrop-blur-lg">
              <span className="countdown font-mono text-5xl">
                <span style={{ "--value": time.s }}></span>
              </span>
              sec
            </div>
          </div>
        </div>

        {/* ----- SA3A ----- */}
        <div className="flex w-full justify-around">
          <div className="space-y-5">
            {/* hours selector */}
            <div>
              <div className="flex justify-center">
                <p>Set hour</p>
              </div>
              <div className="join grid w-fit grid-cols-3">
                <button
                  onClick={() => {
                    if (alarm.h === 0) {
                      setAlarm({ ...alarm, h: 23 });
                      return;
                    }
                    setAlarm({ ...alarm, h: alarm.h - 1 });
                  }}
                  className="btn btn-outline join-item"
                >
                  <AiOutlineMinus />
                </button>
                <input
                  onChange={(e) => {
                    const value = parseInt(e.target.value);
                    if (alarm.h === 23 && value === 24) {
                      setAlarm({ ...alarm, h: 0 });
                      return;
                    } else if (alarm.h === 0 && value === -1) {
                      setAlarm({ ...alarm, h: 23 });
                      return;
                    } else {
                      setAlarm({ ...alarm, h: parseInt(e.target.value) });
                    }
                  }}
                  max={24}
                  min={-1}
                  value={alarm.h}
                  type="number"
                  className="input input-ghost text-center text-xl font-bold focus:!bg-transparent active:!bg-transparent"
                />
                <button
                  onClick={() => {
                    if (alarm.h === 23) {
                      setAlarm({ ...alarm, h: 0 });
                      return;
                    }
                    setAlarm({ ...alarm, h: alarm.h + 1 });
                  }}
                  className="btn btn-outline join-item"
                >
                  <AiOutlinePlus />
                </button>
              </div>
            </div>
            {/* hours selector */}

            {/* minutes selector */}
            <div>
              <div className="flex justify-center">
                <p>Set minutes</p>
              </div>
              <div className="join grid w-fit grid-cols-3">
                <button
                  onClick={() => {
                    if (alarm.m === 0) {
                      setAlarm({ ...alarm, m: 59 });
                      return;
                    }
                    setAlarm({ ...alarm, m: alarm.m - 1 });
                  }}
                  className="btn btn-outline join-item"
                >
                  <AiOutlineMinus />
                </button>
                <input
                  onChange={(e) => {
                    const value = parseInt(e.target.value);
                    if (alarm.m === 59 && value === 60) {
                      setAlarm({ ...alarm, m: 0 });
                      return;
                    } else if (alarm.m === 0 && value === -1) {
                      setAlarm({ ...alarm, m: 59 });
                      return;
                    } else {
                      setAlarm({ ...alarm, m: parseInt(e.target.value) });
                    }
                  }}
                  max={60}
                  min={-1}
                  value={alarm.m}
                  type="number"
                  className="input input-ghost text-center text-xl font-bold focus:!bg-transparent active:!bg-transparent"
                />
                <button
                  onClick={() => {
                    if (alarm.m === 59) {
                      setAlarm({ ...alarm, m: 0 });
                      return;
                    }
                    setAlarm({ ...alarm, m: alarm.m + 1 });
                  }}
                  className="btn btn-outline join-item"
                >
                  <AiOutlinePlus />
                </button>
              </div>
            </div>
            {/* minutes selector */}
            {/* set button */}
            <div>
              <button
                onClick={() => {
                  setIsOn(!isOn);
                }}
                className={`${
                  isOn ? "btn-error" : "btn-success"
                } btn join-item w-full`}
              >
                {isOn ? "Stop" : "Start"}
              </button>
            </div>
            {/* set button */}
          </div>
          <div>
            <div className="flex h-full items-center justify-center text-5xl">
              Sleep Well
            </div>
          </div>
        </div>
      </main>
    </>
  );
}
